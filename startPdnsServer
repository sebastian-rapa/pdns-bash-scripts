#!/bin/bash

# Check if the Enviorment variables are set
if ! enviormentVariablesAreSet; then
        echo "Enviorment variables are not set, please set them first!"
        exit 1
fi



#Check if db.sqlite file exists in pdns config directory
databaseFile="${PDNS_CONFIG_DIR_PATH}db.sqlite"

if [ ! -e ${databaseFile} ]; then
       	echo "SQLite atabase doesn't exist in ${PDNS_CONFIG_DIR_PATH} directory! Do you want to create it? [y/n]"
       	read CREATE_DB
        if [[ ${CREATE_DB} == 'y' || ${CREATE_DB} == 'yes' || ${CREATE_DB} == 'Y' || ${CREATE_DB} == 'YES' ]]; then
               	touch ${PDNS_CONFIG_DIR_PATH}db.sqlite
	else
		echo "[ERROR]: Can not start pdns without database!"
		exit 1
	fi
fi


# If the exit code in pdnsConfFileExists is 1 it means that pdns.conf doesn't exist in pdns config directory.
pdnsConfFile="${PDNS_CONFIG_DIR_PATH}pdns.conf"

if [[ ! -e ${pdnsConfFile} ]]; then
	echo "[WARN]: Power DNS configuration file doesn't exist, create it after re-run this command to start the server"
        echo "[ERROR]: Can not start pdns without config file!"
        exit 1
fi

# Get the number of tables in the database
numberOfTablesInDb=$(sqlite3 ${PDNS_CONFIG_DIR_PATH}db.sqlite .tables | wc -w)

# Check if db was intialized
#dbWasInitialized=$([ ${numberOfTablesInDb} -gt 0 ])

if [ ${numberOfTablesInDb} -eq 0 ]; then
	# Check for sqlite schema and then initialize it
	pdnsSqliteSchemaFile="${PDNS_CONFIG_DIR_PATH}sqliteschema.sql"

	if [ ! -e ${pdnsSqliteSchemaFile}  ]; then
        	echo "[WARN]: Sqlite schema file does not exist and the database is not initialized!"
        	echo "[ERROR]: Can not start pdns without having the database initilizaed.."
	        exit 1
	else
		echo "[INFO]: Intializing db.."
	        # Initialize the data base
        	cat ${pdnsSqliteSchemaFile} | sqlite3 ${databaseFile}
	fi
fi

#Run the command to start the pdns server
echo "[INFO]: Starting Power DNS Server.."
$PDNS_RUN_COMMAND
